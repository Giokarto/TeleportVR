Changes in TeleportVR

1. Server

There is a new abstract class ServerData, which hides the implementation details of the specific server. Other classes can access to its functions without being bound to Animus / WebRTC / mock.
The server implementation can be changed in the scene by enabling the correct GameObject.
Aiortc server implementation is added from the demo project.

2. Scene management

For scene switching, only a single class is used: SceneManager. After loading the Main scene, it automatically sets all object from it as "Dont destroy on load", and loads the training scene. It switches between training scene and the real world scene.
The Main scene in Unity should only contain objects that will persist between the scenes.
GameObjects should be related to only one component, which can be easily enabled / disabled through enabling / disabling the GameObject. For example, the eye planes / spheres to project the camera images to are created by the server component depending on which camera is used, and not present the whole time.

3. Widgets

Widgets are created from a function (in class WidgetFactory), and not from a template. The class BasicWidgets contains the main widgets shown on the top bar of HUD.

4. Input System

The class InputSystem allows to assign function delegates to named buttons, so that the other classes can abstract away the particular input device which is used. The implemented classes ControllerInputSystem and KeyboardInputSystem take care of the function invoke.

5. Folder structure

Changed folder structure to match standard structure in Unity projects. Moved the majority of the code to Assets/Scripts. Gathered code of various control devices to the folder InputDevices. Removed some unused files. 